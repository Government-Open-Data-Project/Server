# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: ["master"]

permissions:
  contents: read

jobs:
  spring-build:
  
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - run: mkdir -p ./src/main/resources/
      - run: touch ./src/main/resources/application.properties
      - run: echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.properties
      - run: cat ./src/main/resources/application.properties

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Grant Execute Permission For Gradlew & Build gradle
        run: |
          chmod +x gradlew
          ./gradlew build -x test
          
      - name: Docker hub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_ID }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          
      - name: Docker image build
        run: |
          docker build -t ${{secrets.DOCKERHUB_ID}}/government-project-server .
      
      - name: Docker Hub push
        run: docker push ${{secrets.DOCKERHUB_ID}}/government-project-server
    
      - name: Deploy to Instance
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.GCP_HOST }}
          username: ${{ secrets.GCP_USERNAME }}
          key: ${{ secrets.GCP_PRIVATEKEY }}
          script: |
            sudo docker login -u ${{ secrets.DOCKERHUB_ID }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
            sudo docker pull ${{ secrets.DOCKERHUB_ID }}/government-project-server
            sudo docker rm -f $(docker ps -qa) 2>/dev/null || true
            cd /home/acadove7/government_project/server
            sudo docker-compose up -d
            sudo docker image prune -f     
